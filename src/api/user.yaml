collection:
  post:
    summary: Create a new user
    operationId: registerUser
    requestBody:
      description: Create user and save it in database with password
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                minLength: 8
              password:
                type: string
                minLength: 8
              firstName:
                type: string
              surname:
                type: string
              birthDate:
                type: string
    responses:
      '200':
        description: User succesfully created
      '400':
        $ref: './errors.yaml#/400'
      '500':
        $ref: './errors.yaml#/500'

instance:
  get:
    summary: Get user Information
    operationId: findUser
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: User found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '401':
        $ref: './errors.yaml#/401'
      '500':
        $ref: './errors.yaml#/500'
  
  patch:
    summary: Update user information
    operationId: updateUser
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      description: Update user and save it in database with password
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              password:
                type: string
              schedule:
                type: object
                properties:
                  time:
                    type: string
                  frecuency:
                    type: number
    responses:
      '200':
        description: User updated
        content:
          application/json:
            schema:
              type: string      
      '401':
        $ref: './errors.yaml#/401'
      '500':
        $ref: './errors.yaml#/500'
  
  delete:
    summary: Deactivate User
    operationId: deleteUser
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: User desactivated
        content:
          application/json:
            schema:
              type: string
      '401':
        $ref: './errors.yaml#/401'
      '500':
        $ref: './errors.yaml#/500'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        active:
          type: boolean
        token:
          type: string